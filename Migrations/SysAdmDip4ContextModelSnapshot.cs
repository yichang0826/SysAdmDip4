// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SysAdmDip4.Data;

#nullable disable

namespace SysAdmDip4.Migrations
{
    [DbContext(typeof(SysAdmDip4Context))]
    partial class SysAdmDip4ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SysAdmDip4.Models.System.Function", b =>
                {
                    b.Property<int>("Function_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Function_Id"));

                    b.Property<int?>("Function_Active")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Function_Controller")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Function_CreateDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("Function_CreaterId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Function_Describe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Function_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Function_Page")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Function_Id");

                    b.ToTable("Function");
                });

            modelBuilder.Entity("SysAdmDip4.Models.System.Member", b =>
                {
                    b.Property<int>("Member_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Member_Id"));

                    b.Property<string>("Member_Account")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Member_Active")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("Member_CreateDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("Member_CreaterId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Member_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Member_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Member_Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Member_RoleId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Member_Id");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("SysAdmDip4.Models.System.Role", b =>
                {
                    b.Property<int>("Role_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Role_Id"));

                    b.Property<string>("Role_Describe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Role_FunctionIdCount")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Role_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Role_Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("SysAdmDip4.Models.System.RoleFunction", b =>
                {
                    b.Property<int>("RoleFunction_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleFunction_Id"));

                    b.Property<int>("FunctionId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("RoleFunction_Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleFunction");
                });

            modelBuilder.Entity("SysAdmDip4.Models.System.RoleFunction", b =>
                {
                    b.HasOne("SysAdmDip4.Models.System.Role", "Role")
                        .WithMany("RoleFunctions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SysAdmDip4.Models.System.Role", b =>
                {
                    b.Navigation("RoleFunctions");
                });
#pragma warning restore 612, 618
        }
    }
}
